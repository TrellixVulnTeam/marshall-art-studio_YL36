<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="API Guides|Product Definition|Dynamic Transaction Rendering/Behaviors">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Behavior XML Syntax</title>
        <link href="../../../../Resources/TableStyles/Example Table.css" rel="stylesheet" />
        <link href="../../../../Resources/TableStyles/Basic Table Type.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/NewStylesheet.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: #f7f7f8 url('file://vmware-host/Shared Folders/Documents/My Projects/AgencyPortal 5.0/Output/Jami_Delia/Online Output/Website Output/Skins/Default/Stylesheets/Images/left-arrow.png') no-repeat center center;
}

.button.current-topic-index-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.next-topic-button
{
	-pie-background: #f7f7f8 url('file://vmware-host/Shared Folders/Documents/My Projects/AgencyPortal 5.0/Output/Jami_Delia/Online Output/Website Output/Skins/Default/Stylesheets/Images/right-arrow.png') no-repeat center center;
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE.htc');
}

</style>
        <script src="../../../Resources/prettify/run_prettify.js">
        </script>
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../Default.htm#Content/API Guide/Product Definitions/Dynamic Transaction Rendering/Behavior XML Syntax.htm">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../API Guide.htm">API Guides</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Product Definitions.htm">Product Definition</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="Dynamic Transaction Rendering_Behaviors.htm">Dynamic Transaction Rendering/Behaviors</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Behavior XML Syntax</span>
        </div>
        <h1>Behavior XML Syntax</h1>
        <p>This section describes the XML based syntax that is supported by the build-in SDK&#160;TDP.</p>
        <p>An application can register one or more behavior files, each containing the behaviors pertaining to one or more transactions (TDF). These behavior files are XML documents that conform to a schema specified in an XML schema with a name of <i style="font-weight: bold;">transactionDefinitionBehavior.xsd</i>.</p>
        <p>The following is a diagram of the transactionDefinitionBehavior.xsd schema:</p>
        <p>
            <img src="../../../../Resources/Images/transactionDefinitionBehavior_677x584.png" style="width: 677;height: 584;" />
        </p>
        <h2>&lt;hotField&gt;</h2>
        <p>Each file can contain zero or more hot fields. Hot fields engage the intra-page DTR support module on those pages of a transaction that have one or more hot fields configured.</p><pre class="prettyprint"><p>&lt;hotField&gt;*/generalInfo/applicantInfo/PolicyEffectiveDt&lt;/hotField&gt;
	&lt;hotField&gt;*/vehicle/vehicleDescription/PersAutoLineBusiness.PersVeh.HotAssistedEntry&lt;/hotField&gt;
	&lt;hotField&gt;*/vehicle/vehicleDescription/PersAutoLineBusiness.PersVeh.HotYear&lt;/hotField&gt;
	&lt;hotField&gt;*/vehicle/vehicleDescription/PersAutoLineBusiness.PersVeh.HotMake&lt;/hotField&gt;
&lt;!-- Example of deferring the automatic invocation of AJAX on a hot field. To defer set the auto attribute to false. 
	 Please note that the default value on the auto= attribute is true --&gt;
	&lt;hotField auto="false" &gt;*/vehicle/vehicleDescription/PersAutoLineBusiness.PersVeh.HotModel&lt;/hotField&gt;
	&lt;hotField&gt;*/vehicle/vehicleDescription/PersAutoLineBusiness.PersVeh.HotVehBodyTypeCd&lt;/hotField&gt;
	&lt;hotField&gt;*/vehicle/additionalInterest/PersAutoLineBusiness.PersVeh.HotAdditionalInterestInfoType&lt;/hotField&gt;</p></pre>
        <p>By default, when a user changes a field that has been configured as hot, an IPDTR AJAX call to the server is automatically invoked. If an application wants to manage that invocation, then a hot field can be marked with the auto="false" to defer this invocation, leaving the decision and responsibility of calling the AJAX IPDTR up to the application custom JavaScript code. For instance, the hot model field in the above example prevents the SDK's Javascript to automatically engage IPDTR when the hot model field is changed. </p>
        <p>The following sample application custom code shows how to manually register the custom event and then invoke the IPDTR AJAX method:</p>
        <table style="width: 100%;mc-table-style: url('../../../../Resources/TableStyles/Example Table.css');" class="TableStyle-Example_Table" cellspacing="0">
            <col class="TableStyle-Example_Table-Column-Column1" />
            <tbody>
                <tr class="TableStyle-Example_Table-Body-Body1">
                    <td class="TableStyle-Example_Table-BodyA-Column1-Body1">
                        <p class="exampleheader">EXAMPLE:</p><pre class="prettyprint"><p class="example">function onHotYearChanged(){
    alert("Calling intrapage DTR AJAX method");
    var hotModelField = page.getField("PersAutoLineBusiness.PersVeh.HotModel");
    hotModelField.makeIntraPageDTRRequest();
}

page.onInitialize = function customInitialize(){
    var hotModelField = page.getField("PersAutoLineBusiness.PersVeh.HotModel");
    if ( hotModelField == null )
        return;
    
    // The following getElements() will return the DOM elements
    // regardless of the field's current interest level.
    var elements = hotModelField.getElements();
    for ( var ix in elements ){
        var element = elements[ix];
        if (element) {
            registerEvent(element, 'change', onHotYearChanged);
        }
    }
}</p></pre>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2>&lt;behavior&gt;</h2>
        <p>Each behavior file can contain one to n behaviors whose order is not important to the build-in TDF. Within each behavior, there is always one, and only one, do element, optionally one where element and one or more for elements.</p>
        <ul>
            <li value="1">The <i>do</i> element specifies what to do. This is required and only one do element is permitted within a behavior.</li>
            <li value="2">The <i>where</i> element specifies the condition when to apply this behavior.</li>
            <li value="3">The <i>for</i> element(s) specify(ies) the page entities to apply the behavior to.</li>
        </ul>
        <p>The following is a sample behavior:</p><pre class="prettyprint"><p> &lt;behavior&gt;
        &lt;do action="exclude"/&gt;
        &lt;where&gt;
            &lt;preCondition name="StateProvCd"&gt;MA&lt;/preCondition&gt;
        &lt;/where&gt;
        &lt;for&gt;*/incident&lt;/for&gt;
        &lt;for&gt;*/employmentInfo&lt;/for&gt;
        &lt;for&gt;*/priorCoverage&lt;/for&gt;
        &lt;for&gt;*/generalInfo/coapplicantInfo&lt;/for&gt;
        &lt;for&gt;*/generalInfo/previousAddress&lt;/for&gt;
        &lt;for&gt;*/generalInfo/mailingAddress/yearsAtCurrentAddress&lt;/for&gt;
        &lt;for&gt;*/generalInfo/mailingAddress/residenceOwnedRented&lt;/for&gt;
        &lt;for&gt;*/generalInfo/paymentPlan/mailPolicyTo&lt;/for&gt;
        &lt;for&gt;*/driver&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleDescription/symbolAgeGroup&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleDescription/garagingType&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleDescription/principleRatedDriver&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleDescription/vehicleClass&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleUsage/territoryCode&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleUsage/distanceOneWay&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleUsage/daysPerWeek&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleUsage/numberWeeksMonths&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleUsage/performance&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleUsage/vehicleUseCode&lt;/for&gt;
        &lt;for&gt;*/vehicle/vehicleUsage/carPoolInd&lt;/for&gt;
        &lt;for&gt;*/vehicle/safetyFeatures&lt;/for&gt;
        &lt;for&gt;*/vehicle/nonMACoverages&lt;/for&gt;
        &lt;for&gt;*/questionnaire&lt;/for&gt;
  &lt;/behavior&gt;</p></pre>
        <p>The above behavior can be read as: <i>Exclude all of the pate entities listed in all of the &lt;for&gt; statements if the precondition value with a field name of "SateProvCd" is equal to 'Ma.'</i></p>
        <h3>&lt;do&gt; statement</h3>
        <p>A do element contains one active attribute, which can be one of the following interest levels:</p>
        <ul>
            <li value="1">include</li>
            <li value="2">exclude</li>
            <li value="3">alter</li>
        </ul>
        <p>If the action attribute is equal to alter, then the following page entities are candidates for alteration:</p>
        <table style="width: 100%;mc-table-style: url('../../../../Resources/TableStyles/Basic Table Type.css');" class="TableStyle-Basic_Table_Type" cellspacing="0">
            <col class="TableStyle-Basic_Table_Type-Column-Column1" style="width: 131px;" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" style="width: 440px;" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" style="width: 138px;" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <tbody>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Property Name</th>
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Example</th>
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Description</th>
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">SDK API Engaged</th>
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Supported by IntraPage DTR</th>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>legend</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="legend"&gt;Legend text&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Applies the element text value to the legend of the page element specified in the &lt;for&gt; statement</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BasePageElement.setLegend()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>javascript</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="javascript"&gt;java script reference&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Applies the java script reference to the page element specified in the &lt;for&gt; statement</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BasePageElement.setScriptSource()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>maxEntries</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="maxEntries"&gt;2&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Sets or overrides the max entries attribute on a roster page element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">RosterPageElement.setMaxEntries()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>minEntries</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="minEntries"&gt;1&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Sets or overrides the min entries attribute on a roster page element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">RosterPageElement.setMinEntries()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>dataFilter</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="dataFilter"&gt;Location.Addr.AddrTypeCd='GaragingAddress'&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Sets or overrides the data filter attribute on a roster page element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">RosterPageElement. setDataFilterExpression()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>emptyRosterMessage</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="emptyRosterMessage"&gt;No locations currently specified&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Sets or overrides the empty roster message element on a roster page element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">RosterPageElement. setEmptyRosterMessage()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1"><i>enableRecover</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">&lt;property name=”enableRecover”&gt;false&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">Sets the enable recover attribute on the roster page element to true or false</td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">RosterPageElement. setEnableRecover()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyA-Column1-Body1">No</td>
                </tr>
            </tbody>
        </table>
        <p>If the action is alter, then the following property alterations for <b>field elements</b> are supported:</p>
        <table style="width: 100%;mc-table-style: url('../../../../Resources/TableStyles/Basic Table Type.css');" class="TableStyle-Basic_Table_Type" cellspacing="0">
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <tbody>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>message</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name=”message”&gt;Message text&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Applies the element text as the message text of the field element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">MessageElement.setMessage()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>required</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name=”required”&gt;true or false&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Applies the boolean value to the required property of the field element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseElement.setRequired()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>readonly</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name=”readonly”&gt;true or false&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Applies the boolean value to the readonly property of the field element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">
                        <p>BaseTextElement.setReadonly()
              OR
BaseListElement.setReadonly()
 

</p>
                        <p>Depending on the field element type. Another side effect of this is that all data pickers are also removed.</p>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>optionListReferenceTag</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name=” optionListReferenceTag”&gt; xmlreader:codeListRef.xml:selectOne|xmlreader:codeListRef.xml:incidentType &lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Applies the option list tag to the select list field element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseListElement.setOptionListReferenceTag()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>label</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name=”label”&gt;label text&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Applies the element text to the label of the field element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseElement.setLabel()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>helpText</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name=”helpText”&gt;help text&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Updates an existing, or creates a new, balloon helper with the element text for the given field element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BalloonFieldHelper.setBalloonText()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>defaultValue</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="defaultValue"&gt;${StateProvCd}&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Updates the default value property on the field element. This example dynamically takes the precondition value with the field name "StateProvCd" and applies that as the default value for the given field element.</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseElement.setDefaultValue()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>maxLength</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="maxLength"&gt;max length value&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Updates the maxLength property on the text based field element in the element value.</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseTextElement.setMaxLength()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes, validation only</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>minLength</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="minLength"&gt;min length value&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Updates the minLength property on the text based field element to the element value</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseTextElement.setMinLength()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes, validation only</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>length</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"> 	
&lt;property name="length"&gt; length value&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Updates the length property on the text based field element to the element value</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseTextElement.setLength()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes, validation only</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>validation</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="validation" type="required" message="This field is required"&gt;true&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Updates an existing validation element or adds a new one of the given <i>type</i> for the given field element</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">
                        <p>Other attributes of note:</p>
                        <p>The <i>type</i> attribute specifies the validation element type and the message attribute specifies the message. The type attribute is required while the message attribute is optional.</p>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>id</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="id"&gt;${StateProvCd}&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">
                        <p>Substitutes a replacement parameter within an ACORD&#160;path with the precondition value of that name:</p>
                        <p>Assume StateProvCd='MA'</p>
                        <p>Before ACORD&#160;path:</p>
                        <p>id="PersAutoLineBusiness.PersDriver.DriverInfo.License[LicenseTypeCd='Driver' &amp;amp;&amp;amp; StateProvCd='${StateProvCd}'].LicensePermitNumber"</p>
                        <p>After ACORD path:</p>
                        <p>PersAutoLineBusiness.PersDriver.DriverInfo.License[LicenseTypeCd='Driver' &amp;&amp; StateProvCd='MA'].LicensePermitNumber</p>
                        <p>Assume that the field element contains a uniqueId attribute</p>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseElement.setId()
BaseElement.setElementName()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>groupid</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">&lt;property name="groupId"&gt;${StateProvCd}&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Same as "id" item above</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">BaseElement.setGroupId()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1"><i>styleClass</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">&lt;property name="styleClass"&gt;my style class&lt;/property&gt;</td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">Changes the CSS&#160;style class for a field</td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">MessageElement.setStyleClass()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyA-Column1-Body1">Yes</td>
                </tr>
            </tbody>
        </table>
        <h3>&lt;where&gt; clause</h3>
        <p>A where clause can contain one or more precondition sub elements. Each precondition element has a name attribute that specifies the precondition or condition field name that is passed as the first parameter to the PreCondition.getFieldValue(). Multiple preconditions are ANDED together. To achieve ORing across preconditions, multiple behaviors are required to be coded.</p>
        <p>The following is a very contrived example:</p><pre class="prettyprint"><p>      &lt;behavior&gt;
            &lt;do action="include"/&gt;
            &lt;where&gt;
                  &lt;preCondition name="PolicyEffectiveDt"&gt;!DateBefore('2008-01-01')&lt;/preCondition&gt;
            &lt;/where&gt;

            &lt;for&gt;*/questionsFor2008&lt;/for&gt;

      &lt;/behavior&gt;
      &lt;behavior&gt;
            &lt;do action="include"/&gt;
            &lt;where&gt;
                  &lt;preCondition name="UserId"&gt;agent2&lt;/preCondition&gt;
            &lt;/where&gt;
            &lt;for&gt;*/questionsFor2008&lt;/for&gt;

      &lt;/behavior&gt;
      &lt;behavior&gt;
            &lt;do action="exclude"/&gt;
            &lt;for&gt;*/questionsFor2008&lt;/for&gt;
      &lt;/behavior&gt;</p></pre>
        <p>Read the above set of behaviors as <i>Include the 2008 questions page if either the policy effective date &gt;=01/01/2008 OR the current user id == agent2</i>.</p>
        <h3>&lt;for&gt;</h3>
        <p>Multiple for statements are supported and can also leverage the MATCH_ANY ('*') or NOT&#160;('!') operators on portions of the compound key.</p>
        <h4>Supported Operators</h4>
        <table style="width: 100%;mc-table-style: url('../../../../Resources/TableStyles/Basic Table Type.css');" class="TableStyle-Basic_Table_Type" cellspacing="0">
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <col class="TableStyle-Basic_Table_Type-Column-Column1" />
            <tbody>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Operator Type</th>
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Operator tag</th>
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Example</th>
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Description</th>
                    <th style="text-align: left;" class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Comment</th>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Equality</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><i>Implicit</i>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><pre class="prettyprint"><p>&lt;where&gt;
   
&lt;preCondition name="StateProvCd"&gt;MA&lt;/preCondition&gt;
   
&lt;/where&gt;</p></pre>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">
                        <p>Engage behavior action</p>
                        <p>if the precondition StateProvCd data value is <b>equal</b> to 'MA'</p>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">The equality test is the default operator and should not be expressed as ==MA or something of that ilk. Also, no quotes should be used in this situation.</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">In</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><b>in()</b>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><pre class="prettyprint"><p>&lt;where&gt;
   
&lt;preCondition name="StateProvCd"&gt;in('MA','FL')&lt;/preCondition&gt;
   
&lt;/where&gt;</p></pre>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">
                        <p>Engage behavior action</p>
                        <p>if the precondition StateProvCd data value is <b>equal</b> to either 'MA' or 'FL'</p>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">The list of values must have single quotes and each item delimited with a comma while the whole list has parenthesis encircling it.</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Numeric less than</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">It()</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><pre class="prettyprint"><p>     &lt;behavior&gt;
&lt;do action="include"/&gt;
            &lt;where&gt;
&lt;preCondition name="NumberOfIncidents"&gt;!lt(2)&lt;/preCondition&gt;
            &lt;/where&gt;
            &lt;for&gt;*/questionnaire/Questionnaire/badDriverQuestion1&lt;/for&gt;
   &lt;/behavior&gt;       &lt;behavior&gt;             &lt;do action="exclude"/&gt;             &lt;for&gt;*/questionnaire/Questionnaire/badDriverQuestion1&lt;/for&gt;       &lt;/behavior&gt;</p></pre>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Include the bad driver question if there are three or more incidents on this work item</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">It(n), where n is a numeric field</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">DateBefore</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">DateBefore(</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><pre class="prettyprint"><p>&lt;where&gt;
   
&lt;preCondition name="PolicyEffectiveDt"&gt;DateBefore('2008-01-01')&lt;/preCondition&gt;
   
&lt;/where&gt;</p></pre>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">
                        <p>Engage behavior action</p>
                        <p>if the precondition PolicyEffectiveDate data value is <b>before</b> 01-01-2008</p>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">Date must be expressed as YYYY-MM-DD with single quotes and with encircling parenthesis</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Match any</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">*</td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1"><pre class="prettyprint"><p>&lt;for&gt;endorsePersonalAuto/generalInfo/agencyInformation/*&lt;/for&gt;</p></pre>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyE-Column1-Body1">Apply the behavior to all of the field elements in the agency information section on the general info page for endorsements</td>
                    <td class="TableStyle-Basic_Table_Type-BodyD-Column1-Body1">The '*' can only be used by itself as an operand.</td>
                </tr>
                <tr class="TableStyle-Basic_Table_Type-Body-Body1">
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">NOT</td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">!</td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1"><pre class="prettyprint"><p>&lt;where&gt;
   
&lt;preCondition name="StateProvCd"&gt;!MA&lt;/preCondition&gt;
   
&lt;/where&gt;</p></pre>
                    </td>
                    <td class="TableStyle-Basic_Table_Type-BodyB-Column1-Body1">Reverses or negates equality test. The NOT&#160;symbol is the '!' character</td>
                    <td class="TableStyle-Basic_Table_Type-BodyA-Column1-Body1">Can be applied to equality, DataBefore, and In operators</td>
                </tr>
            </tbody>
        </table>
        <div class="buttons inline-buttons clearfix topicToolbarProxy" style="mc-topic-toolbar-items: ;">
            <div class="button-group-container-left">
                <button class="button needs-pie previous-topic-button" type="button" title="Navigate previous">
                    <img src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                </button>
                <div class="button current-topic-index-button disabled"><span class="sequence-index"></span> of <span class="sequence-total"></span></div>
                <button class="button needs-pie next-topic-button" type="button" title="Navigate next">
                    <img src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                </button>
            </div>
        </div>
    </body>
</html>