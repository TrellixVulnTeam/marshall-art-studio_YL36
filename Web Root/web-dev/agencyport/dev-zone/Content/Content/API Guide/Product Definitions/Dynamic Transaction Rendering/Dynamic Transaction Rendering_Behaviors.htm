<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="API Guides|Product Definition">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Dynamic Transaction Rendering / Behaviors</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/NewStylesheet.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: #f7f7f8 url('file://vmware-host/Shared Folders/Documents/My Projects/AgencyPortal 5.0/Output/Jami_Delia/Online Output/Website Output/Skins/Default/Stylesheets/Images/left-arrow.png') no-repeat center center;
}

.button.current-topic-index-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.next-topic-button
{
	-pie-background: #f7f7f8 url('file://vmware-host/Shared Folders/Documents/My Projects/AgencyPortal 5.0/Output/Jami_Delia/Online Output/Website Output/Skins/Default/Stylesheets/Images/right-arrow.png') no-repeat center center;
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE.htc');
}

</style>
        <script src="../../../Resources/prettify/run_prettify.js">
        </script>
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../Default.htm#Content/API Guide/Product Definitions/Dynamic Transaction Rendering/Dynamic Transaction Rendering_Behaviors.htm">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../API Guide.htm">API Guides</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Product Definitions.htm">Product Definition</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Dynamic Transaction Rendering / Behaviors</span>
        </div>
        <h1>Dynamic Transaction Rendering / Behaviors</h1>
        <p>Dynamic transaction rendering (DTR) provides the necessary infrastructure in the SDK that serves as the basic foundation for applications to conditionally display a set of page entities, or alter such page entities, and to govern those decisions with a set of preconditons or conditions. The following lists summarizes the basic features of this subsystem:</p>
        <ul>
            <li value="1">retain the currently established TDF authoring process at Agencyport.</li>
            <li value="2">promote / improve page entity reuse</li>
            <li value="3">support the notion of page entity inclusion, exclusion or alteration based on one or more preconditions/conditions with minimal custom Java code and minimal configuration. The following is a sample of precondition/condition types:<ul style="list-style-type: circle;"><li value="1">US State</li><li value="2">Policy Effective Date</li><li value="3">User Role</li><li value="4">Company / Carrier</li><li value="5">Transaction type</li><li value="6">Quote / New business</li><li value="7">Endorsement / renewals</li></ul></li>
        </ul>
        <p>The following diagram depicts the major components within DTR:</p>
        <p>
            <img src="../../../../Resources/Images/DTRcomponents_548x410.png" style="width: 548;height: 410;" />
        </p>
        <h2>Behaviors Repository</h2>
        <p>The behavior repository contains the "rules" used by the Agencyport transaction definition provider on how to modify a transaction image given a particular set of precondition or conditions. This repository stores whether a page entity is included or excluded, depending on a condition and, if included, optionally, how to alter it from how that page entity is declared in the transaction definition file. For intra-page DTR, the repository also defines the hot field(s) on a page; meaning, the page composition needs to change in some way when a user changes a hot field. Almost the entire behavior repository was programmatically generated from the Coverage Form / Detail XML metadata delivered to us from General Casualty. </p>
        <h2>Transaction Definition Provider</h2>
        <p>Without the transaction definition provider add-on component, the web page rendered mirrors its respective physical page definition found in the TDF. When engaged, the page engine utilizes the transaction definition provider to transform the page composition, dynamically, by leveraging the behavior repository in conjunction with the current set of preconditions and conditions that are currently in context.</p>
        <h2>PreConditions</h2>
        <p>The PreCondition framework serves as the central go to spot for precondition and condition state. An application written LOB PreCondition class extends an SDK base class. Its main responsibility is to provide the logic to synchronize the precondition state with application state and to establish default precondition values to apply in situations when the condition value has not yet been discovered. The preCondition framework that is part of the product supplies almost all of the other functionality in the areas of precondition.</p>
        <p>The areas managed by the product are the persistence of preconditions to the database, loading the preconditions state back into the scope for each HTTP request and the serving of precondition values back by name to the transaction definition provider (or to whatever other component that needs precondition state).</p>
        <h2>IntraPage Support Module</h2>
        <p>This module supports the transformation on an SDK page when that page is in context, based on changes the user has made to one or more selected fields. This engages an AJAX trigger, which ends up morphing the current page into something different than it was before the user made the change. The fields that cause these events are called <i>hot fields</i> and are expressed in the behavior repository.</p>
        <p>There are several areas of functionality on the server side in support of intra-page DTR that are delegated to the application via the implementation established in an SDK interface called <b style="font-style: italic;">IIntraPageDTRAssistant</b>. The area of support here is list content refresh decisions. It assists the Intra-Page Support Module in the following areas:</p>
        <ul>
            <li value="1">sets up index management for rosters with multiple repeating hierarchies.</li>
            <li value="2">returns a yes/no answer on whether a select list field should have its contents flushed and rebuild, depending on the origin hot field.</li>
            <li value="3">the reassignment of a field's values and/or default value for targeted text based fields.</li>
        </ul>
        <h2>Built-in PreConditions</h2>
        <p>The SDK supports two build-in preconditions:</p>
        <ul>
            <li value="1">UserId - the user id of the current user viewing the work item</li>
            <li value="2">inRosterEditMode - a string boolean value that is set to true for the display side of a roster edit page</li>
        </ul>
        <p>The following are two behavior samples illustrating how to access the values:</p><pre class="prettyprint"><p>    &lt;behavior&gt;
        &lt;do action="alter"&gt;
            &lt;property name="readonly"&gt;true&lt;/property&gt;
        &lt;/do&gt;
        &lt;where&gt;
            &lt;preCondition name="UserId"&gt;agent2&lt;/preCondition&gt;
        &lt;/where&gt;
        &lt;for&gt;endorsePersonalAuto/*/*/*&lt;/for&gt;
    &lt;/behavior&gt;</p></pre><pre class="prettyprint"><p>   &lt;behavior&gt;
        &lt;do action="alter"&gt;
            &lt;property name="readonly"&gt;true&lt;/property&gt;
        &lt;/do&gt;
        &lt;where&gt;
            &lt;preCondition name="inRosterEditMode"&gt;true&lt;/preCondition&gt;
        &lt;/where&gt;
        &lt;for&gt;*/vehicle/vehicleDescription/PersAutoLineBusiness.PersVeh.HotAssistedEntry&lt;/for&gt;
    &lt;/behavior&gt;</p></pre>
        <div class="MCMiniTocBox_0">
            <p class="MiniTOC1_0"><a class="MiniTOC1" href="Behavior XML Syntax.htm">Behavior XML Syntax</a>
            </p>
            <p class="MiniTOC1_0"><a class="MiniTOC1" href="Behaviors Built-in Preconditions and Operations.htm">Behaviors: Built-in Preconditions and Operations</a>
            </p>
            <p class="MiniTOC2_0"><a class="MiniTOC2" href="Behaviors and Hotfields.htm">Behaviors and Hotfields</a>
            </p>
            <p class="MiniTOC3_0"><a class="MiniTOC3" href="Adding a Behavior via Toolkit.htm">Adding a Behavior via Toolkit</a>
            </p>
            <p class="MiniTOC3_0"><a class="MiniTOC3" href="Adding a Hotfield via Toolkit.htm">Adding a Hotfield via Toolkit</a>
            </p>
            <p class="MiniTOC3_0"><a class="MiniTOC3" href="Altering Behaviors via Toolkit.htm">Altering Behaviors via Toolkit</a>
            </p>
            <p class="MiniTOC3_0"><a class="MiniTOC3" href="Exporting a Behavior via Toolkit.htm">Exporting a Behavior via Toolkit</a>
            </p>
            <p class="MiniTOC3_0"><a class="MiniTOC3" href="Testing a Behavior via Toolkit.htm">Testing a Behavior via Toolkit</a>
            </p>
            <p class="MiniTOC3_0"><a class="MiniTOC3" href="Changing Additional Fields via Toolkit.htm">Configuring Additional Fields in Toolkit</a>
            </p>
            <p class="MiniTOC1_0"><a class="MiniTOC1" href="Enabling IntraPage DTR.htm">Enabling IntraPage DTR</a>
            </p>
        </div>
        <div class="buttons inline-buttons clearfix topicToolbarProxy" style="mc-topic-toolbar-items: ;">
            <div class="button-group-container-left">
                <button class="button needs-pie previous-topic-button" type="button" title="Navigate previous">
                    <img src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                </button>
                <div class="button current-topic-index-button disabled"><span class="sequence-index"></span> of <span class="sequence-total"></span></div>
                <button class="button needs-pie next-topic-button" type="button" title="Navigate next">
                    <img src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                </button>
            </div>
        </div>
    </body>
</html>