<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="API Guides|Security|Effective Security Programming|ASCI Step-by-Step Guide|Fleshing Out the ACSI Security Model|Extending the Model|Importance of Supporting Fine Grained Permissions">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Making the Case for Fine-Grained Permissions</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/NewStylesheet.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: #f7f7f8 url('file://vmware-host/Shared Folders/Documents/My Projects/AgencyPortal 5.0/Output/Jami_Delia/Online Output/Website Output/Skins/Default/Stylesheets/Images/left-arrow.png') no-repeat center center;
}

.button.current-topic-index-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.next-topic-button
{
	-pie-background: #f7f7f8 url('file://vmware-host/Shared Folders/Documents/My Projects/AgencyPortal 5.0/Output/Jami_Delia/Online Output/Website Output/Skins/Default/Stylesheets/Images/right-arrow.png') no-repeat center center;
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE.htc');
}

</style>
        <script src="../../../Resources/prettify/run_prettify.js">
        </script>
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../Default.htm#Content/API Guide/Security/Effective Security Programming/Case for Fine Grained Permissions.htm">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../API Guide.htm">API Guides</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Security.htm">Security</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="Effective Security Programming.htm">Effective Security Programming</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Making the Case for Fine Grained Permissions</span>
        </div>
        <h1>Making the Case for Fine-Grained Permissions</h1>
        <p>To provide out the principle of leveraging fine-grained permissions, let's pretend there is a link on a custom page to your portal app that, when clicked, displays a message that indicates whether the system believes whether the user has attempted to "game the system" in context of the current work item. This link is visible only to a limited set of users. Assume there are three roles in the system with the names of "admin," "underwriter," and "agent." The underwriter role is permitted to click on the link, but the agent is not. If you did not have explicit permissions tied to roles, your JSP&#160;code might look something like the following:</p><pre class="prettyprint"><p>IPrincipal user = securityProfile.getSubject().getPrincipal(); IRoles roles = securityProfile.getRoles();
if (roles.isUserInRole(user, “underwriter”) ) {
         // emit the HTML for the link in question
}</p></pre>
        <p>If you had explicit permissions at your disposal, then your JSP&#160;could look something like the following:</p><pre class="prettyprint"><p>IPrincipal user = securityProfile.getSubject().getPrincipal(); IRoles roles = securityProfile.getRoles();
if (roles.checkPermission(user, “canAccessGamingTheSystemMessage”) {
         // emit the HTML for the link in question
}
</p></pre>
        <p>So what's the big deal? Now let's pretend that the business requirements change midstream and the customer wants the admin role to also have permission to click the link. The role based would need adjustment as follows:</p><pre class="prettyprint"><p>if (roles.isUserInRole(user, “admin”) || roles.isUserInRole(user, “underwriter”) ) {
         // emit the HTML for the link in question
}</p></pre>
        <p>Whereas, if you were employing fine-grained permissions, you could simply add the "<code>canAccessGamingTheSystemMessage</code>" permission to the admin role in the database without the need to change any JSP code.</p>
        <p>The resilience of fine-grained permissions cannot be overstated. The only time you may need to add new code is when a new permission is added or deleted. Any changes in the relationships of permissions to roles can be driven entirely with metadata and should not require a coding change. An added benefit is that applications designed with RBAC decisions are driven entirely by fine-grained permissions based application accommodates the introduction of brand new role groupings without the need to change any code, assuming that no new permissions themselves have been introduced.</p>
        <p>As part of the analysis and design phase, you must identify the set of permissions for your application. That does not mean you cannot add the new permissions later during the development phase since some of the permissions will be dictated by your customer and the functional set that needs protection. However, it is important to note that some of the AgencyPortal product subsystems also rely on the presence of fine-grained permissions to function properly. The following is a partial list of those subsystems:</p>
        <ul>
            <li value="1">Work list: every work list action that displays is tied to a permission</li>
            <li value="2">Dashboard report:&#160;each dashboard report is tied to a permission</li>
            <li value="3">Menu (as in Home / My Work / Toolkit menu): each menu entry is tied to a permission</li>
        </ul>
        <p>If you come to the conclusion that fine-grained permissions are deemed unnecessary, note that this decision will compromise your ability to easily leverage those product features that in fact do require explicit permissions. This decision will also greatly increase the brittleness of the security aspects of your application as changes are introduced in the future.</p>
        <div class="buttons inline-buttons clearfix topicToolbarProxy" style="mc-topic-toolbar-items: ;">
            <div class="button-group-container-left">
                <button class="button needs-pie previous-topic-button" type="button" title="Navigate previous">
                    <img src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                </button>
                <div class="button current-topic-index-button disabled"><span class="sequence-index"></span> of <span class="sequence-total"></span></div>
                <button class="button needs-pie next-topic-button" type="button" title="Navigate next">
                    <img src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                </button>
            </div>
        </div>
    </body>
</html>